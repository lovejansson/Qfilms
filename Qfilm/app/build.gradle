apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"


    dataBinding{
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }


    defaultConfig {
        applicationId "com.example.qfilm"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName = true
        multiDexEnabled true
        testInstrumentationRunner"androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        String sharedTestDir = "src/testCommon/java"
        test {
            java.srcDir  sharedTestDir
        }
        androidTest {
            java.srcDir  sharedTestDir
        }
        main{
            java.srcDir  sharedTestDir
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {

    sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'com.google.android.material:material:1.3.0-beta01'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    def fragmentVersion = "1.3.0-beta01"

    implementation "androidx.fragment:fragment:$fragmentVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"


     def lifecycleVersion = "2.2.0"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    def roomVersion = '2.3.0-alpha02'
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"


    def loggingInterceptorVersion = "4.0.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"


    def recyclerViewVersion = "1.2.0-beta01"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'


    def youtubeApiVersion = "10.0.5"
    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:core:$youtubeApiVersion"

    // FIREBASE

    implementation platform('com.google.firebase:firebase-bom:26.1.0')

    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.google.firebase:firebase-auth:20.0.1'

    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    implementation 'com.google.firebase:firebase-firestore'

    implementation 'com.google.firebase:firebase-dynamic-links'

    implementation 'com.google.firebase:firebase-config'

    implementation 'com.facebook.android:facebook-login:4.42.0'

    implementation 'com.google.firebase:firebase-perf'

    implementation 'com.google.firebase:firebase-functions'

    // TESTING

    def androidXTestVersion = '1.3.0'
    def androidEspressoTestVersion = '3.3.0'
    def junit5Version = "5.7.0"
    def junit4Version = "4.13"

    implementation 'junit:junit:4.13'

    androidTestImplementation 'androidx.test:rules:1.3.1-alpha02'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"

    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"

    testImplementation "junit:junit:$junit4Version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5Version"

    testImplementation 'org.json:json:20140107'


    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    implementation "androidx.test.espresso:espresso-idling-resource:$androidEspressoTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidEspressoTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidEspressoTestVersion"
    androidTestImplementation "androidx.test:core:$androidXTestVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'

    def mockWebServerVersion = "4.9.0"
    def daggerVersion = '2.29.1'


    testImplementation 'org.mockito:mockito-core:2.19.0'

    androidTestImplementation 'org.mockito:mockito-android:2.19.0'

    implementation 'org.mockito:mockito-core:2.19.0'


    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    // DAGGER

    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // PREFERENCES

    implementation "androidx.preference:preference:1.1.1"

    // ALGOLIA

    implementation 'com.algolia:algoliasearch-android:3.+'

    def work_version = "2.4.0"

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

}